!function(){var t=document.createElement("style");t.innerHTML='.sts-banner{--tw-bg-opacity: 1;background-color:rgba(251,191,36,var(--tw-bg-opacity));position:relative;padding:.75rem;text-align:center;font-family:Inter var,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"}.sts-banner .sts-closing-time,.sts-banner .sts-opening-time{font-weight:600}html.sts-during-sabbath,html.sts-during-sabbath body{overflow:hidden}html.sts-during-sabbath body{max-height:100vh}.sts-full-message__container{top:0px;right:0px;bottom:0px;left:0px;position:absolute;--tw-bg-opacity: 1;background-color:rgba(255,255,255,var(--tw-bg-opacity));pointer-events:auto;overflow-y:scroll;z-index:500}.sts-full-message__heading{margin-bottom:1rem;font-size:3rem;font-weight:600}.sts-layout{display:flex;flex-wrap:wrap;margin-left:-.5rem;margin-right:-.5rem}.sts-layout .sts-layout__item{padding-left:.5rem;padding-right:.5rem}.sts-modal{width:90%;margin-left:auto;margin-right:auto;margin-top:7%;max-width:640px;justify-content:center}.sts-message-area{font-size:1rem;line-height:1.5rem;width:100%;text-align:center;padding-bottom:1rem}.sts-time-area{width:100%;text-align:center;border-top:1px solid lightgrey;padding-top:1rem}\n',document.head.appendChild(t),System.register([],(function(){"use strict";return{execute:function(){const t=(t,e)=>Object.assign(t,e),e=(t,e)=>{const n="cccc, LLLL d 'at' h:mm a ZZZZ";for(let o=0;o<t.length;o++){const s=t[o],a=s.dataset.formatToken,i=s.dataset.formatLocale;let l;l=a?e.toFormat(a):i?e.toLocaleString(JSON.parse(i)):e.toFormat(n),s.textContent=l}};(()=>{console.log("Intializing Sunset to Sunset...");const n=luxon.DateTime,o=luxon.Duration,s=n.now();let a={};a["Current Time"]={Date:s.toLocaleString(n.DATE_FULL),Time:s.toLocaleString(n.TIME_WITH_SHORT_OFFSET)};const i=5==s.weekday||6==s.weekday,l=document.getElementsByTagName("html")[0];i&&l.classList.add("hidden");const r=document.querySelector("template#sts-settings");let c=null!=r?JSON.parse(r.dataset.settings):{};c=t(t({},{guardDuration:{minutes:30},messageDuration:{minutes:60},location:{lat:0,long:0},simulateTime:!1,debug:!1}),c),c.simulateTime&&console.warn("%cThe `simulateTime` option is enabled for the Sunset to Sunset plugin. Remember to disable this option once you are done verifying the settings.","font-size: 16px"),c.debug&&(console.group("Sunset to Sunset intialized with the following options:"),console.dir(c),console.groupEnd());const m=()=>c.location,d=async t=>{const e=t.split("T")[0],o=await fetch("https://api.sunrise-sunset.org/json?&lat="+m().lat+"&lng="+m().long+"&date="+e+"&formatted=0"),s=await o.json();return n.fromISO(s.results.sunset)},u=()=>{let t;t=c.simulateTime?0:5-s.weekday;const e=n.fromISO(s.plus({days:t})).toString();return d(e)},g=()=>{let t;t=c.simulateTime?1:6-s.weekday;const e=n.fromISO(s.plus({days:t})).toString();return d(e)},p=()=>c.guardDuration,b=t=>t.minus(o.fromObject(c.messageDuration)),h=(t,e)=>{let n;return"closing"==e&&(n=t.minus(p())),"opening"==e&&(n=t.plus(p())),n};i||c.simulateTime?(async()=>{const t=Promise.all([u(),g()]);return await t})().then((([t,o])=>{const i=h(t,"closing"),r=h(o,"opening");let m=!1,d=!1,u=!1,g=!1;if(c.simulateTime)switch(c.simulateTime){case"preparation-day":m=!0;break;case"banner-up":d=!0;break;case"during-sabbath":u=!0;break;case"after-sabbath":g=!0}else m=s<b(i),d=s>b(i)&&s<i,u=s>=i&&s<=r&&s.weekday>=5,g=s>r&&s>=6;if(m){const t=b(i).diff(s,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(d){((t,n)=>{const o=document.querySelector("template#sts-banner-template");let s;if(o)s=o;else{let t=document.createElement("template");t.innerHTML='\n\t\t\t<div class="sts-banner">\n\t\t\t\tBecause of religious beliefs our store will be closed over the Sabbath hours.\n\t\t\t\tClosing on <span class="sts-closing-time"></span> and will re-open on <span class="sts-opening-time"></span>.\n\t\t\t</div>\n\t\t',s=t}const a=s.content.cloneNode(!0),i=a.querySelectorAll(".sts-closing-time");e(i,t);const l=a.querySelectorAll(".sts-opening-time");e(l,n),document.body.insertBefore(a,document.body.firstChild)})(i,r);const t=i.diff(s,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(u){(t=>{const n=document.querySelector("template#sts-message-template");let o;if(n)o=n;else{let t=document.createElement("template");t.innerHTML='\n\t\t\t<div class="sts-full-message__container">\n\n\t\t\t\t<div class="sts-layout  sts-modal">\n\t\t\t\t\t<div class="sts-layout__item  sts-message-area">\n\t\t\t\t\t\t<h1 class="sts-full-message__heading">Sabbath</h1>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIn a world that seems to be spinning faster every day, we choose to stop \n\t\t\t\t\t\t\tand rest every Sabbath (Saturday). It’s a day for us to relax, refresh, \n\t\t\t\t\t\t\trefocus and worship; worship a God who loved us so much that He built a \n\t\t\t\t\t\t\tday of rest into Creation week and then commanded us to keep it \n\t\t\t\t\t\t\t(knowing we probably wouldn’t do it otherwise—even though it is for \n\t\t\t\t\t\t\tour best good).\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="sts-layout__item  sts-time-area">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tWe will re-open on <strong><span class="sts-opening-time"></span>.</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\n\t\t',o=t}const s=o.content.cloneNode(!0),a=s.querySelectorAll(".sts-opening-time");e(a,t),document.getElementsByTagName("html")[0].classList.add("sts-during-sabbath"),document.body.insertBefore(s,document.body.firstChild)})(r);const t=r.diff(s,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(l.classList.remove("hidden"),c.debug){let e={Enabled:{"Preparation day":m,"Banner up":d,"During the Sabbath":u,"After Sabbath":g}};console.group("Sunset to Sunset time checks"),console.table(e),console.groupEnd(),a["Banner up"]={Date:b(i).toLocaleString(n.DATE_FULL),Time:b(i).toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Closing guard"]={Date:i.toLocaleString(n.DATE_FULL),Time:i.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Closing sunset"]={Date:t.toLocaleString(n.DATE_FULL),Time:t.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Opening sunset"]={Date:o.toLocaleString(n.DATE_FULL),Time:o.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Opening guard"]={Date:r.toLocaleString(n.DATE_FULL),Time:r.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},console.group("Sunset to Sunset times"),console.table(a),console.groupEnd()}})):console.log("Sunset to Sunset: Exiting because today is not closing day")})()}}}))}();
//# sourceMappingURL=sunset-to-sunset-legacy.min.js.map
