!function(){var t=document.createElement("style");t.innerHTML='.sts-banner{--tw-bg-opacity: 1;background-color:rgba(251,191,36,var(--tw-bg-opacity));position:relative;padding:.75rem;text-align:center;font-family:Inter var,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"}.sts-banner .sts-closing-time,.sts-banner .sts-opening-time{font-weight:600}html.sts-during-sabbath,html.sts-during-sabbath body{overflow:hidden}html.sts-during-sabbath body{max-height:100vh}.sts-full-message__container{top:0px;right:0px;bottom:0px;left:0px;position:absolute;--tw-bg-opacity: 1;background-color:rgba(255,255,255,var(--tw-bg-opacity));pointer-events:auto;overflow-y:scroll;z-index:500}.sts-full-message__heading{margin-bottom:1rem;font-size:3rem;font-weight:600}.sts-layout{display:flex;flex-wrap:wrap;margin-left:-.5rem;margin-right:-.5rem}.sts-layout .sts-layout__item{padding-left:.5rem;padding-right:.5rem}.sts-modal{width:90%;margin-left:auto;margin-right:auto;margin-top:7%;max-width:640px;justify-content:center}.sts-message-area{font-size:1rem;line-height:1.5rem;width:100%;text-align:center;padding-bottom:1rem}.sts-time-area{width:100%;text-align:center;border-top:1px solid lightgrey;padding-top:1rem}\n',document.head.appendChild(t),System.register([],(function(){"use strict";return{execute:function(){const t=(t,e)=>Object.assign(t,e),e=(t,e)=>{const n="cccc, LLLL d 'at' h:mm a ZZZZ";for(let s=0;s<t.length;s++){const o=t[s],a=o.dataset.formatToken,i=o.dataset.formatLocale;let l;l=a?e.toFormat(a):i?e.toLocaleString(JSON.parse(i)):e.toFormat(n),o.textContent=l}};(()=>{console.log("Intializing Sunset to Sunset...");const n=luxon.DateTime,s=luxon.Duration,o=n.now();let a={};a["Current Time"]={Date:o.toLocaleString(n.DATE_FULL),Time:o.toLocaleString(n.TIME_WITH_SHORT_OFFSET)};const i=document.querySelector("template#sts-settings");let l={};i.dataset.days&&(l=JSON.parse(i.dataset.days));l=t(t({},{closing:5,opening:6}),l);const r=()=>l.closing,c=()=>l.opening,m=o.weekday==r()||o.weekday==c();let d={};i.dataset.settings&&(d=JSON.parse(i.dataset.settings)),d=t(t({},{guardDuration:{minutes:30},bannerDuration:{hours:3},location:{lat:0,long:0},simulateTime:!1,debug:!1}),d);const u=document.getElementsByTagName("html")[0];(m||d.simulateTime)&&(u.style.display="none"),d.simulateTime&&console.warn("%cThe `simulateTime` option is enabled for the Sunset to Sunset plugin. Remember to disable this option once you are done verifying the settings.","font-size: 16px"),d.debug&&(console.group("Sunset to Sunset intialized with the following options:"),console.dir(d),console.groupEnd());const g=()=>d.location,p=async t=>{const e=t.split("T")[0],s=await fetch("https://api.sunrise-sunset.org/json?&lat="+g().lat+"&lng="+g().long+"&date="+e+"&formatted=0"),o=await s.json();return n.fromISO(o.results.sunset)},b=()=>{let t=r()-o.weekday;const e=n.fromISO(o.plus({days:t})).toString();return p(e)},f=()=>{let t=c()-o.weekday;const e=n.fromISO(o.plus({days:t})).toString();return p(e)},h=()=>d.guardDuration,y=t=>t.minus(s.fromObject(d.bannerDuration)),S=(t,e)=>{let n;return"closing"==e&&(n=t.minus(h())),"opening"==e&&(n=t.plus(h())),n};if(m||d.simulateTime){let t=!1,s=!1,i=!1,l=!1;if(d.simulateTime)switch(d.simulateTime){case"preparation-day":t=!0;break;case"banner-up":s=!0;break;case"during-sabbath":i=!0;break;case"after-sabbath":l=!0}(async()=>{const t=Promise.all([b(),f()]);return await t})().then((([m,g])=>{const p=S(m,"closing"),b=S(g,"opening");if(d.simulateTime||(t=o<y(p),s=o>y(p)&&o<p,i=o>=p&&o<=b&&o.weekday>=r(),l=o>b&&o>=c()),t){const t=y(p).diff(o,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(s){((t,n)=>{const s=document.querySelector("template#sts-banner-template");let o;if(s)o=s;else{let t=document.createElement("template");t.innerHTML='\n\t\t\t<div class="sts-banner">\n\t\t\t\tBecause of religious beliefs our store will be closed over the Sabbath hours.\n\t\t\t\tClosing on <span class="sts-closing-time"></span> and will re-open on <span class="sts-opening-time"></span>.\n\t\t\t</div>\n\t\t',o=t}const a=o.content.cloneNode(!0),i=a.querySelectorAll(".sts-closing-time");e(i,t);const l=a.querySelectorAll(".sts-opening-time");e(l,n),document.body.insertBefore(a,document.body.firstChild)})(p,b);const t=p.diff(o,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(i){(t=>{const n=document.querySelector("template#sts-full-message-template"),s=document.querySelector("template#sts-message-template"),o=n||s;let a;if(o)a=o.content.cloneNode(!0),a=a.firstElementChild;else{let t=document.createElement("div");t.innerHTML="\n\t\t\t<p>\n\t\t\t\tIn a world that seems to be spinning faster every day, we choose to stop \n\t\t\t\tand rest every Sabbath (Saturday). It’s a day for us to relax, refresh, \n\t\t\t\trefocus and worship; worship a God who loved us so much that He built a \n\t\t\t\tday of rest into Creation week and then commanded us to keep it \n\t\t\t\t(knowing we probably wouldn’t do it otherwise—even though it is for \n\t\t\t\tour best good).\n\t\t\t</p>\n\t\t",a=t}let i=document.createElement("template");i.innerHTML='\n\t\t<div class="sts-full-message__container">\n\n\t\t\t<div class="sts-layout  sts-modal">\n\t\t\t\t<div class="sts-layout__item  sts-message-area  relative">\n\t\t\t\t\t<h1 class="sts-full-message__heading">Sabbath</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class="sts-layout__item  sts-time-area">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tWe will re-open on <strong><span class="sts-opening-time"></span>.</strong>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t\t</div>\n\t';const l=i.content.cloneNode(!0);if(n){let t=l.querySelector(".sts-full-message__container");for(;t.firstElementChild;)t.removeChild(t.firstChild);t.insertBefore(a,null)}else s&&l.querySelector(".sts-message-area").insertBefore(a,null);document.getElementsByTagName("html")[0].classList.add("sts-during-sabbath");const r=l.querySelectorAll(".sts-opening-time");e(r,t),document.body.insertBefore(l,document.body.firstChild)})(b);const t=b.diff(o,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(u.style.display="block",d.debug){let e={Enabled:{"Preparation day":t,"Banner up":s,"During the Sabbath":i,"After Sabbath":l}};console.group("Sunset to Sunset time checks"),console.table(e),console.groupEnd(),a["Banner up"]={Date:y(p).toLocaleString(n.DATE_FULL),Time:y(p).toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Closing guard"]={Date:p.toLocaleString(n.DATE_FULL),Time:p.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Closing sunset"]={Date:m.toLocaleString(n.DATE_FULL),Time:m.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Opening sunset"]={Date:g.toLocaleString(n.DATE_FULL),Time:g.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Opening guard"]={Date:b.toLocaleString(n.DATE_FULL),Time:b.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},console.group("Sunset to Sunset times"),console.table(a),console.groupEnd()}}))}else u.style.display="block",console.log("Sunset to Sunset: Exiting because today is not closing day")})()}}}))}();
//# sourceMappingURL=sunset-to-sunset-legacy.min.js.map
