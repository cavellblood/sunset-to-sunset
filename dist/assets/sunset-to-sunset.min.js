export function __vite_legacy_guard(){import("data:text/javascript,")}const t=(t,e)=>Object.assign(t,e),e=(t,e)=>{const n="cccc, LLLL d 'at' h:mm a ZZZZ";for(let s=0;s<t.length;s++){const o=t[s],a=o.dataset.formatToken,i=o.dataset.formatLocale;let l;l=a?e.toFormat(a):i?e.toLocaleString(JSON.parse(i)):e.toFormat(n),o.textContent=l}};(()=>{console.log("Intializing Sunset to Sunset...");const n=luxon.DateTime,s=luxon.Duration,o=n.now();let a={};a["Current Time"]={Date:o.toLocaleString(n.DATE_FULL),Time:o.toLocaleString(n.TIME_WITH_SHORT_OFFSET)};const i=5==o.weekday||6==o.weekday,l=document.getElementsByTagName("html")[0],r=document.querySelector("template#sts-settings");let c=null!=r?JSON.parse(r.dataset.settings):{};c=t(t({},{guardDuration:{minutes:30},messageDuration:{minutes:60},location:{lat:0,long:0},simulateTime:!1,debug:!1}),c),(i||c.simulateTime)&&(l.style.display="none"),c.simulateTime&&console.warn("%cThe `simulateTime` option is enabled for the Sunset to Sunset plugin. Remember to disable this option once you are done verifying the settings.","font-size: 16px"),c.debug&&(console.group("Sunset to Sunset intialized with the following options:"),console.dir(c),console.groupEnd());const u=()=>c.location,m=async t=>{const e=t.split("T")[0],s=await fetch("https://api.sunrise-sunset.org/json?&lat="+u().lat+"&lng="+u().long+"&date="+e+"&formatted=0"),o=await s.json();return n.fromISO(o.results.sunset)},d=()=>{let t;t=c.simulateTime?0:5-o.weekday;const e=n.fromISO(o.plus({days:t})).toString();return m(e)},g=()=>{let t;t=c.simulateTime?1:6-o.weekday;const e=n.fromISO(o.plus({days:t})).toString();return m(e)},p=()=>c.guardDuration,S=t=>t.minus(s.fromObject(c.messageDuration)),T=(t,e)=>{let n;return"closing"==e&&(n=t.minus(p())),"opening"==e&&(n=t.plus(p())),n};i||c.simulateTime?(async()=>{const t=Promise.all([d(),g()]);return await t})().then((([t,s])=>{const i=T(t,"closing"),r=T(s,"opening");let u=!1,m=!1,d=!1,g=!1;if(c.simulateTime)switch(c.simulateTime){case"preparation-day":u=!0;break;case"banner-up":m=!0;break;case"during-sabbath":d=!0;break;case"after-sabbath":g=!0}else u=o<S(i),m=o>S(i)&&o<i,d=o>=i&&o<=r&&o.weekday>=5,g=o>r&&o>=6;if(u){const t=S(i).diff(o,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(m){((t,n)=>{const s=document.querySelector("template#sts-banner-template");let o;if(s)o=s;else{let t=document.createElement("template");t.innerHTML='\n\t\t\t<div class="sts-banner">\n\t\t\t\tBecause of religious beliefs our store will be closed over the Sabbath hours.\n\t\t\t\tClosing on <span class="sts-closing-time"></span> and will re-open on <span class="sts-opening-time"></span>.\n\t\t\t</div>\n\t\t',o=t}const a=o.content.cloneNode(!0),i=a.querySelectorAll(".sts-closing-time");e(i,t);const l=a.querySelectorAll(".sts-opening-time");e(l,n),document.body.insertBefore(a,document.body.firstChild)})(i,r);const t=i.diff(o,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(d){(t=>{const n=document.querySelector("template#sts-full-message-template"),s=document.querySelector("template#sts-message-template"),o=n||s;let a;if(o)a=o.content.cloneNode(!0),a=a.firstElementChild;else{let t=document.createElement("div");t.innerHTML="\n\t\t\t<p>\n\t\t\t\tIn a world that seems to be spinning faster every day, we choose to stop \n\t\t\t\tand rest every Sabbath (Saturday). It’s a day for us to relax, refresh, \n\t\t\t\trefocus and worship; worship a God who loved us so much that He built a \n\t\t\t\tday of rest into Creation week and then commanded us to keep it \n\t\t\t\t(knowing we probably wouldn’t do it otherwise—even though it is for \n\t\t\t\tour best good).\n\t\t\t</p>\n\t\t",a=t}let i=document.createElement("template");i.innerHTML='\n\t\t<div class="sts-full-message__container">\n\n\t\t\t<div class="sts-layout  sts-modal">\n\t\t\t\t<div class="sts-layout__item  sts-message-area  relative">\n\t\t\t\t\t<h1 class="sts-full-message__heading">Sabbath</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class="sts-layout__item  sts-time-area">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tWe will re-open on <strong><span class="sts-opening-time"></span>.</strong>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t\t</div>\n\t';const l=i.content.cloneNode(!0);if(n){let t=l.querySelector(".sts-full-message__container");for(;t.firstElementChild;)t.removeChild(t.firstChild);t.insertBefore(a,null)}else s&&l.querySelector(".sts-message-area").insertBefore(a,null);document.getElementsByTagName("html")[0].classList.add("sts-during-sabbath");const r=l.querySelectorAll(".sts-opening-time");e(r,t),document.body.insertBefore(l,document.body.firstChild)})(r);const t=r.diff(o,"milliseconds").toObject();t.milliseconds>=0&&setTimeout((()=>{location.reload()}),t.milliseconds)}if(l.style.display="block",c.debug){let e={Enabled:{"Preparation day":u,"Banner up":m,"During the Sabbath":d,"After Sabbath":g}};console.group("Sunset to Sunset time checks"),console.table(e),console.groupEnd(),a["Banner up"]={Date:S(i).toLocaleString(n.DATE_FULL),Time:S(i).toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Closing guard"]={Date:i.toLocaleString(n.DATE_FULL),Time:i.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Closing sunset"]={Date:t.toLocaleString(n.DATE_FULL),Time:t.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Opening sunset"]={Date:s.toLocaleString(n.DATE_FULL),Time:s.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},a["Opening guard"]={Date:r.toLocaleString(n.DATE_FULL),Time:r.toLocaleString(n.TIME_WITH_SHORT_OFFSET)},console.group("Sunset to Sunset times"),console.table(a),console.groupEnd()}})):console.log("Sunset to Sunset: Exiting because today is not closing day")})();
//# sourceMappingURL=sunset-to-sunset.min.js.map
